using Microsoft.EntityFrameworkCore;
using ModuloAPI.Context;
using Scalar.AspNetCore;

// Cria o builder da aplica√ß√£o web, que configura os servi√ßos e o pipeline de execu√ß√£o
var builder = WebApplication.CreateBuilder(args);

// üîß Adiciona servi√ßos ao cont√™iner de inje√ß√£o de depend√™ncia para que possam ser 
//    injetados em controllers e services

//  Registra o AgendaContext no sistema de inje√ß√£o de depend√™ncia da aplica√ß√£o e configura o EF Core para 
//  usar o SQL Server como banco de dados, utilizando a string de conex√£o chamada "ConexaoPadrao" definida no appsettings.json.
builder.Services.AddDbContext<AgendaContext>(options =>
    options.UseSqlServer(builder.Configuration.GetConnectionString("ConexaoPadrao")));

// Adiciona suporte ao OpenAPI, que permite gerar documenta√ß√£o da API em formato JSON
builder.Services.AddOpenApi();
// Adiciona suporte ao Swagger, que gera uma interface gr√°fica para testar e explorar a API
builder.Services.AddEndpointsApiExplorer(); // Necess√°rio para expor os endpoints no Swagger
builder.Services.AddSwaggerGen();           // Gera a documenta√ß√£o Swagger com base nos controllers

// adicionar suporte a controllers MVC, que permitem organizar endpoints em classes
builder.Services.AddControllers();

// üî® Constr√≥i a aplica√ß√£o com base nas configura√ß√µes feitas acima
var app = builder.Build();

// üåê Configura o pipeline de requisi√ß√µes HTTP (middleware) para ambiente de desenvolvimento
if (app.Environment.IsDevelopment())
{
    // Mapeia o endpoint do OpenAPI (documenta√ß√£o em JSON da API)
    // Acesse por : http://localhost:5137/openapi/v1.json
    app.MapOpenApi();

    // Ativa o middleware do Swagger para gerar a documenta√ß√£o interativa
    // Acesse por:  http://localhost:5137/swagger/index.html
    app.UseSwagger();      // Gera o JSON da documenta√ß√£o
    app.UseSwaggerUI();    // Interface gr√°fica para explorar os endpoints

    // Mapeia o endpoint do Scalar, que fornece uma refer√™ncia interativa da API
    //  Acesse por:  http://localhost:5137/scalar/v1
    app.MapScalarApiReference();

}

// üîí Adiciona middleware √°ra redirecionar automaticamente requisi√ß√µes HTTP para HTTPS
app.UseHttpsRedirection();

// üöÄ Mapeia os endpoints definidos nos controllers que usam roteamento baseado em atributos como [HttpGet], [HttpPost], [Route("api/alguma-coisa")], etc.
app.MapControllers();

// üèÅ Inicia a aplica√ß√£o e come√ßa a escutar requisi√ß√µes
app.Run();